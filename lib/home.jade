template(name='home')
    .ui.padded.stackable.grid
        .sixteen.wide.column
            .ui.inline.header 
                i.pizza.slice.icon
                |backcountry
                // i.chat.outline.large.icon(title='backcountry chat')
            if currentUser
                .ui.basic.icon.button.add_post
                    i.large.plus.icon
                .ui.large.icon.input(title='messages cost one point but can receive points from votes')
                    i.plus.icon
                    input.new_message(type='text' placeholder='quick add (-1p)')
            if post_tag_results
                .ui.inline.small.header
                    i.tag.icon
                    |tags
                each picked_post_tags
                    a.ui.blue.label.unpick_post_tag
                        |#{this}
                each post_tag_results
                    if title
                        a.ui.basic.large.small.link.label.pick_post_tag
                            |#{title} 
                            small.ui.grey.text #{count}
                
            
            // .four.wide.column
            .ui.big.label(title='results')
                |#{home_items.count}
            // span.sorting_row
            +search_input model='post' field='title'
            // .ui.small.inline.header 
            //     |layout
            // +session_set key='view_layout' value='grid' icon='th' 
            // +session_set key='view_layout' value='list' icon='list'
            // .ui.small.inline.header 
            //     |direction
            +session_set key='sort_direction' value='-1' icon='chevron down'
            +session_set key='sort_direction' value='1' icon='chevron up'
            // .ui.small.inline.header 
            //     |by
            +session_set key='sort_key' value='points' label='points' icon='coins'
            +session_set key='sort_key' value='created_date' label='when' icon='clock'
            // +session_set key='view_limit' value=1
            
            // i.large.sort.icon
            .ui.compact.icon.basic.circular.button.set_sort_direction(title='toggle sort direction')
                if sorting_up
                    i.sort.amount.down.icon
                else
                    i.sort.amount.up.icon
            |&nbsp;
            |&nbsp;
            // .ui.compact.menu
            //     .ui.simple.dropdown.item
            //         strong #{product_limit}
            //         i.dropdown.icon
            //         .menu
            //           +set_product_limit amount=1
            //           +set_product_limit amount=5
            //           +set_product_limit amount=10
            //             +set_product_limit amount=20
            // div
            // .ui.small.inline.header 
            //     |media
            +session_set key='view_videos' value=true label='when' icon='youtube'
            +session_set key='view_images' value=true label='view images' icon='image'
            if session_is 'view_images' true
                .ui.inline.header color picker
            +session_set key='view_events' value=true label='view events' icon='calendar'
            +session_set key='view_tasks' value=true label='view tasks' icon='checkmark'
            +session_set key='view_locations' value=true label='view location' icon='marker'
            if session_is 'view_locations' true
                .ui.inline.header near me
            +session_set key='view_food' value='view_food' label='view' icon='food'
            if session_is 'view_food' true
                .ui.small.inline.header
                    i.food.icon
                    |ingredient filter
            // .ui.inline.header
            // .ui.circular.button
            //     // |p                
            //     i.chevron.up.large.icon
            // .ui.circular.button
            //     // |p                
            //     i.chevron.large.down.icon
            // .ui.inline.header
            //     i.line.chart.icon
            //     |leaderboard
            each top_users
                .ui.inline.header #{username}
            .ui.inline.header 
                |your points
                |#{currentUser.points}
            if current_post
                .ui.stackable.grid
                    .six.wide.column.scrolling
                        each home_items
                            +home_item
                            // .ui.divider
                    .ten.wide.column.scrolling
                        with current_post
                            +post_view
                            // .ui.header
                            //     |#{title}
            else 
                .ui.stackable.padded.five.column.grid.scrolling
                    each home_items
                        .column
                            +home_item
                    

template(name='home_item')
    // if session_is 'editing_chat' _id
    //     .ui.item
    //         .content
    //             +text_edit key='title' direct=true
    //             i.checkmark.large.link.green.icon.save_chat   
    //             +boolean_edit key='archived' label='archived' icon='archive' direct=true
    // else
    .ui.fluid.card.zoomer.pointer(class=card_class)
        if image_id
            +image_view key='image_id' direct=true
        if youtube_id
            +youtube_view key='image_id' direct=true
        // if is_selected
        //     .ui.header this one
        // if unless
        // else
        //     img.ui.image(src="{{c.url image_id width=500 height=500 gravity='face' crop='fill'}}")
        .content.view_post_quick
            // a.ui.header.zoomer.fly_right(href="/post/#{_id}") !{title}
            a.ui.header.zoomer.view_post_quick !{title}
            
            a.author    
                if _author_username
                    a(href="/user/#{_author_username}")
                        |#{_author_username}
                else 
                    // i.anon.grey.icon
                    |anonymous
                    
                .metadata
                    |#{when}
                    small {{long_date _timestamp}}
            .text.view_post_quick
                |!{body}
            span.meta
                if is_task
                    i.big.checkmark.icon
                if is_event
                    i.big.calendar.icon
                if has_price
                    .ui.green.button
                        |buy #{price_points}p, $#{price_dollars}
                    i.big.calendar.icon
                if has_location
                    i.large.red.marker.icon
                    |#{location}
                span(title='views')
                    i.eye.link.icon
                    |#{views}
                // +voting_small
                // if in_dev
                //     +print_this
                //     +alert_this
                // if is_admin
                //     i.pencil.large.link.icon.edit_chat            
                if can_edit
                    a.zoomer.fly_down(href="/post/#{_id}/edit")
                        i.pencil.large.link.icon
                if watson
                    +doc_emotion_small
            unless viewing_full
                .ui.icon.circular.basic.button.view_full
                    i.chevron.down.icon
                    // |view full
            if viewing_full
                .ui.icon.circular.basic.button.view_less
                    i.chevron.up.icon
                    // |view less



// template(name='posts')
//     .ui.stackable.padded.grid
//         .four.wide.column
//             .ui.inline.header 
//                 i.large.fire.icon
//                 |posts
//             .ui.basic.icon.button.add_post
//                 i.large.plus.icon
//             div
//             .ui.inline.small.header
//                 i.tag.icon
//                 |tags
//             each picked_post_tags
//                 a.ui.blue.label.unpick_post_tag
//                     |#{this}
//             each post_tag_results
//                 if title
//                     a.ui.basic.circular.small.link.label.pick_post_tag
//                         |#{title} 
//                         small.ui.grey.text #{count}
//         .twelve.wide.column
//             span.sorting_row
//                 +search_input model='post' field='title'
//                 // +session_set key='view_users' value='grid' icon='th' 
//                 // +session_set key='view_users' value='list' icon='list'
//                 // +session_set key='sort_users_direction' value='-1' icon='chevron down'
//                 // +session_set key='sort_users_direction' value='1' icon='chevron up'
//                 // +session_set key='sort_users_key' value='points' icon='coins'
//                 // +session_set key='sort_users_key' value='created_date' icon='clock'
//                 // +session_set key='view_limit' value=1
                
//                 i.large.sort.icon
//                 .ui.compact.icon.button.set_sort_direction(title='toggle sort direction')
//                     if sorting_up
//                         i.sort.amount.down.icon
//                     else
//                         i.sort.amount.up.icon
//                 |&nbsp;
//                 |&nbsp;
//                 // .ui.compact.menu
//                 //     .ui.simple.dropdown.item
//                 //         strong #{product_limit}
//                 //         i.dropdown.icon
//                 //         .menu
//                         //   +set_product_limit amount=1
//                           +set_product_limit amount=5
//                           +set_product_limit amount=10
//                             +set_product_limit amount=20
//                 .spacer 
        
//             span.ui.stackable.cards.scrolling
//                 each post_docs
//                     +post_card
                

template(name='post_card')                
    a.ui.card(href="/post/#{_id}") 
        img.ui.image(src="{{c.url image_id width=400 height=300 crop='pad'}}")
        if youtube_id
            +youtube_view key='youtube_id' direct=true
        .content 
            .ui.header 
                |#{title}
            i.grey.tag.icon
            each tags
                .ui.label #{this}
            if location_tags
                i.grey.marker.icon
                each location_tags
                    .ui.small.label #{this}
            if people_tags
                i.grey.marker.icon
                each people_tags
                    .ui.small.label #{this}


                
template(name='post_edit')
    with current_doc
        .ui.stackable.padded.grid
            .row
                .six.wide.column
                    .ui.inline.header
                        i.pencil.icon
                        | #{title}
                        small post
                    a.ui.large.icon.green.button(href="/post/#{_id}/" title='save product')
                        i.checkmark.big.icon
                    +text_edit key='title' label='title' direct=true
                    +image_edit key='image_id' label='image' direct=true
                    +boolean_edit key='published' label='published' direct=true
                    +boolean_edit key='is_task' label='is task' icon='checkmark' direct=true
                    if is_task
                        +boolean_edit key='complete' label='complete' icon='checkmark' direct=true
                    +boolean_edit key='is_event' label='is event' icon='calendar' direct=true
                    if is_event
                        +datetime_edit key='start_datetime' label='start datetime' icon='calendar' direct=true
                    +boolean_edit key='has_video' label='has video' icon='youtube' direct=true
                    if has_video
                        +youtube_edit key='youtube_id' label='youtube id' icon='youtube'
                    +boolean_edit key='has_image' label='has image' icon='image' direct=true
                    if has_image
                        +image_edit key='image_id' label='image' icon='image'
                    +boolean_edit key='has_price' label='has price' icon='money' direct=true
                    if has_price
                        +number_edit key='price_dollars' label='price ($)' icon='money'
                    
                    
                    div
                .ten.wide.column
                    div
                    +html_edit key='body' label='body' direct=true
                    +array_edit key='tags' label='tags' icon='tags' direct=true
                    +array_edit key='emotion_tags' label='emotion tags' icon='tags' direct=true
                    +array_edit key='location_tags' label='location tags' icon='tags' direct=true
                    +array_edit key='people_tags' label='people tags' icon='tags' direct=true
                    .ui.red.button.delete_post
                        i.remove.icon   
                        | delete
                
                
template(name='post_view')
    // with current_doc
    .ui.stackable.padded.grid.scrolling
        .row
            .sixteen.wide.column
                .ui.basic.icon.circular.button.clear_current_post(title='clear selection')
                    i.chevron.remove.large.icon
                .ui.inline.header
                    | #{title}
                +image_view key='image_id' label='image' direct=true
                // .scrollin
                if is_task
                    +task_view
                if is_location
                    +location_view
                if image_id
                    +image_view key='image_id' direct=true
                +html_view key='body' direct=true
                // +html_view key='content' direct=true
                // +html_view key='description' direct=true
                if youtube_id
                    +youtube_view key='youtube_id' direct=true
                .ui.header 
                    i.users.icon
                    |audience
                +comments
                if watson
                    +watson_view
                if tone 
                    +tone_view
                // .six.wide.column
                +boolean_view key='published' label='published' direct=true
                +boolean_view key='is_task' label='is task' icon='checkmark' direct=true
                +boolean_view key='is_event' label='is event' icon='calendar' direct=true
                +boolean_view key='has_video' label='has video' icon='youtube' direct=true
                +boolean_view key='has_image' label='has image' icon='image' direct=true
                +boolean_view key='has_price' label='has price' icon='money' direct=true
                
                // div
                if can_edit
                    a.ui.icon.large.basic.button(href="/post/#{_id}/edit")
                        i.pencil.icon
                .ui.large.basic.label added #{when}
                if body
                    +call_watson key='body' mode='html'
                    +call_tone key='body'
                each _timestamp_tags
                    .ui.label #{this}
                if in_dev
                    +print_this
                .ui.basic.label
                    |views
                    |#{views}
                div
                +array_view key='tags' label='tags' icon='tags' direct=true
                div
                +array_view key='emotion_tags' label='emotion tags' icon='tags' direct=true
                div
                +array_view key='location_tags' label='location tags' icon='tags' direct=true
                div
                +array_view key='people_tags' label='people tags' icon='tags' direct=true
                +voting_full
                +boolean_view key='published' label='published' direct=true
                
                
                
                
// template(name='tasks')
//     .ui.stackable.padded.grid
//         .four.wide.column
//             .ui.inline.header 
//                 i.tasks.icon
//                 |tasks
//             div
//             if currentUser
//                 i.plus.large.link.circular.icon.add_task
//             .ui.inline.small.header 
//                 i.user.friends.icon
//                 |authors
//             each picked_authors
//                 a.ui.blue.label.unpick_author
//                     |#{this}
//             each author_results
//                 if title
//                     a.ui.basic.circular.small.link.label.pick_author
//                         |#{title} 
//                         small.ui.grey.text #{count}
//             div
//             .ui.small.inline.header
//                 i.tags.icon
//                 |tags
//             each picked_task_tags
//                 a.ui.blue.label.unpick_task
//                     |#{this}
//             each task_tag_results
//                 if title
//                     a.ui.basic.circular.small.link.label.pick_task
//                         |#{title} 
//                         small.ui.grey.text #{count}
//             div
//             // .ui.small.inline.header
//             //     i.fire.icon
//             //     |groups
//             // each picked_task_groups
//             //     a.ui.blue.label.unpick_group
//             //         |#{this}
//             // each task_group_results
//             //     if title
//             //         a.ui.basic.circular.small.link.label.pick_group
//             //             |#{title} 
//             //             small.ui.grey.text #{count}
//         .twelve.wide.column
//             span.sorting_row
//                 +search_input model='task' field='title'
//                 // +session_set key='view_users' value='grid' icon='th' 
//                 // +session_set key='view_users' value='list' icon='list'
//                 // +session_set key='sort_users_direction' value='-1' icon='chevron down'
//                 // +session_set key='sort_users_direction' value='1' icon='chevron up'
//                 // +session_set key='sort_users_key' value='points' icon='coins'
//                 // +session_set key='sort_users_key' value='created_date' icon='clock'
//                 // +session_set key='view_limit' value=1
//                 +session_set key='view_limit' value=10
//                 +session_set key='view_limit' value=20
//                 +session_set key='view_limit' value=50

                
//                 i.large.sort.icon
//                 +set_product_sort_key key='comment_count' label='comment count' icon='chat'
//                 +set_product_sort_key key='views' label='views' icon='eye'
//                 +set_product_sort_key key='points' label='points' icon='line chart'
//                 .ui.compact.icon.button.set_sort_direction(title='toggle sort direction')
//                     if sorting_up
//                         i.sort.amount.down.icon
//                     else
//                         i.sort.amount.up.icon
//                 |&nbsp;
//                 |&nbsp;
//                 .spacer 
        
//             span.ui.doubling.cards.scrolling
//                 each task_docs
//                     .ui.link.card
//                         a(href="/task/#{_id}") 
//                             img.ui.image(src="{{c.url image_id width=400 height=300 crop='pad'}}")
//                         a.content(href="/task/#{_id}") 
//                             .ui.header 
//                                 |#{title}
//                             |#{description}
//                             .ui.inline.header #{points}pts
//                             each tags
//                                 .ui.small.basic.label #{this}
//                             // |added #{when} by #{_author_username}
                
                
                
template(name='task_edit')
    with current_doc
        .ui.stackable.padded.grid
            .row
                .six.wide.column
                    .ui.inline.header
                        i.pencil.icon
                        | #{title}
                        small task
                    a.ui.large.icon.green.button(href="/task/#{_id}/" title='save product')
                        i.checkmark.big.icon
                    +text_edit key='title' label='title' direct=true
                    +image_edit key='image_id' label='image' direct=true
                    div
                    +boolean_edit key='has_user_assignment' label='has user assignment' direct=true
                    if has_user_assignment
                        each group_members
                            .ui.button.assign_member #{username}
                    div
                    +boolean_edit key='has_minute_expectation' label='has minute expectation' direct=true
                    div
                    if has_minute_expectation
                        +number_edit key='minute_expectation' label='time expectation (minutes)' direct=true
                    div
                    +boolean_edit key='has_duedatetime' label='has due date/time' icon='calendar' direct=true
                    div
                    if has_duedatetime
                        +datetime_edit key='due_datetime' label='due date/time' icon='calendar' direct=true
                    +number_edit key='amount' label='amount (leave 0 for infinite)' direct=true
                    div
                    +boolean_edit key='has_point_bounty' label='has point bounty' icon='hashtag' direct=true
                    div
                    if has_point_bounty
                        +number_edit key='point_bounty' label='point_bounty' direct=true
                    div
                .ten.wide.column
                    div
                    +boolean_edit key='has_subgroup_specification' label='has specific subgroup' icon='users' direct=true
                    div
                    .ui.header     
                        i.users.icon
                        |subgroup availability
                    each current_subgroups
                        .ui.button.select_subgroup(class=subgroup_class)
                            img.ui.tiny.inline.image(src="{{c.url image_id width=400 height=300 crop='pad'}}")
                            |#{title}
                    +number_edit key='amount' label='amount (leave 0 for infinite)' direct=true
                    +html_edit key='description' label='description' direct=true
                    .ui.header     
                        i.large.marker.icon
                        |possible locations
                    each task_locations
                        .ui.button.select_location(class=location_class)
                            img.ui.tiny.inline.image(src="{{c.url image_id width=400 height=300 crop='pad'}}")
                            |#{title}
                    +array_edit key='tags' label='tags' icon='tags' direct=true
                    .ui.red.button.delete_task
                        i.remove.icon   
                        | delete
                
                
template(name='task_view')
    .six.wide.column
        a.ui.icon.button(href="/task/#{_id}/edit")
            i.pencil.icon
        +boolean_view key='has_user_assignment' label='has user assignment' direct=true
        if has_user_assignment
            each group_members
                .ui.button.assign_member #{username}
        +boolean_view key='has_minute_expectation' label='has minute expectation' direct=true
        if has_minute_expectation
            +number_view key='minute_expectation' label='time expectation (minutes)' direct=true
        +boolean_view key='has_duedatetime' label='has due date/time' icon='calendar' direct=true
        if has_duedatetime
            +datetime_view key='due_datetime' label='due date/time' icon='calendar' direct=true
        +number_view key='amount' label='amount (leave 0 for infinite)' direct=true
        +boolean_view key='has_point_bounty' label='has point bounty' icon='hashtag' direct=true
        if has_point_bounty
            +number_view key='point_bounty' label='point_bounty' direct=true
            
    .ten.wide.column
        div.scrolling
            +html_view key='notes' label='directions' direct=true
        // .ui.inline.header 
        //     i.large.marker.icon
        //     |possible locations
        // each possible_locations
        //     .ui.large.label #{title}
        if currentUser
            .ui.button.record_work
                |record work
        .ui.header 
            i.wrench.icon
            |work
        .ui.selection.animated.list
            each task_work
                a.item(href="/work/#{_id}") 
                    img.ui.tiny.inline.image(src="{{c.url image_id width=400 height=300 crop='pad'}}")
                    if before_image_id
                        img.ui.tiny.inline.image(src="{{c.url before_image_id width=400 height=300 crop='pad'}}")
                    if before_image_id
                        img.ui.tiny.inline.image(src="{{c.url after_image_id width=400 height=300 crop='pad'}}")
                    |#{when} #{_author_username}
        +html_view key='description' label='description' direct=true
                            