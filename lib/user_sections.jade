// template(name='user_compare')
//     .ui.header 
//         +i name='compare-heights'
//         |user compare
    
//     each bc_users
//         a.ui.button.pick_user(href="/user/#{current_username}/compare/#{username}")
//             |#{username}

template(name='user_points')
    .ui.stackable.two.column.grid
        // if is_current_user
        
        .column.smallscroll
            +points_received
        //     +user_topups
        // .column.smallscroll
        //     +user_work
        .column.smallscroll
            +points_sent
            // +user_orders

template(name='points_received')
    .ui.header 
        |points received
template(name='points_sent')
    .ui.header 
        |points sent

// template(name='user_topups')
//     a.ui.inline.header(href="/user/#{current_username}/topups")
//         +i name='wallet'
//         |#{user_topup_docs.count}
//         |topups
//     .ui.green.basic.button.top_up
//         +i name='donate' cl='ui avatar image'
//         |topup
//     .ui.link.selection.animated.list.scrolling
//         each user_topup_docs
//             .item
//                 .ui.inline.header 
//                     |#{topup_amount} #{when}
//                 a.ui.big.icon.basic.button(href="/topup/#{_id}" title='view topup') 
//                     i.chevron.right.icon
//                 if in_dev
//                     +remove_button
// template(name='user_work')
//     .ui.inline.header
//     a.ui.inline.header(href="/user/#{current_username}/work")
//         i.wrench.icon
//         |#{user_work.count}
//         |jobs 
//     .ui.selection.link.animated.divided.list.scrolling
//         each user_work_docs
//             a.item.zoom_out(href="/work/#{_id}") 
//                 .content
//                     if image_id
//                         img.ui.small.inline.image(src="{{c.url image_id width=400 height=300 crop='pad'}}")
//                     img.ui.tiny.inline.image(src="{{c.url task_image_id width=400 height=300 crop='pad'}}")
//                     .ui.inline.header 
//                         |#{task_title}
//                     .ui.inline.header #{task_points}pts
//                     if location_image_id
//                         img.ui.tiny.inline.image(src="{{c.url location_image_id width=400 height=300 crop='pad'}}")
//                     .ui.inline.header 
//                         |@#{location_title}
                        
//                     .description #{when} {{long_date _timestamp}} for 
//                     // if in_dev
//                     //     +remove_button      
                    
                    
// template(name='user_orders')            
//     .ui.inline.header
//         i.shop.icon
//         |#{user_orders.count}
//         |orders
//     .ui.selection.link.animated.divided.list.scrolling
//         each user_orders
//             a.item.fly_right(href="/order/#{_id}") 
//                 .content
//                     if image_id
//                         img.ui.small.inline.image(src="{{c.url image_id width=400 height=300 crop='pad'}}")
//                     img.ui.tiny.inline.image(src="{{c.url task_image_id width=400 height=300 crop='pad'}}")
//                     .ui.inline.header 
//                         |#{product.title}
//                     .ui.inline.header #{purchase_amount}pts
//                     // if location_image_id
//                     //     img.ui.tiny.inline.image(src="{{c.url location_image_id width=400 height=300 crop='pad'}}")
//                     // .ui.inline.header 
//                     //     |@#{location_title}
                        
//                     .description #{when} {{long_date _timestamp}} 
//                     // if in_dev
//                     //     +remove_button


template(name='user_delivery')
    .ui.inline.header 
        +icolor name='delivery'
        |user delivery
    if is_current_user
        a.ui.circular.basic.icon.button(href="/user/#{current_user.username}/edit/delivery")
            i.pencil.icon
            |edit delivery settings
    div
    .ui.large.label available to deliver
        if available_for_delivery
            i.large.green.checkmark.icon
        else
            i.large.green.checkmark.icon
    with current_user
        .ui.stackable.three.column.grid
            .column
                each delivery_orders
                    .ui.header #{when}




template(name='user_food')
    .ui.inline.header
        +icolor name='food'
        |user food
    if is_current_user
        a.ui.circular.basic.icon.button(href="/user/#{current_user.username}/edit/food")
            i.pencil.icon
    div
    +array_view key='allergens' label='allergens'
    +array_view key='food_likes' label='food likes'
    +array_view key='food_dislikes' label='food dislikes'
    each food_orders
        +food_order_view






template(name='food_order_view')
    .ui.segment
        a.ui.header(href="/m/food_order/#{_id}/view") #{when}
        if charge 
            .ui.header charge
        if in_dev
            |#{charge.result.id}
        .ui.header $#{charge.result.amount}
        if can_edit 
            unless submitted
                +date_edit key='date' label='date' direct=true
                +text_edit key='notes' label='notes' direct=true
                +key_value_edit key='tiffen_type' value='meat' direct=true
                +key_value_edit key='tiffen_type' value='veggie' direct=true
                .ui.green.button.submit_order
                    |submit order
            else
                +date_view key='date' label='date' direct=true
                +text_view key='notes' label='notes' direct=true
                .ui.large.label
                    |tiffen type: #{tiffen_type}
                +boolean_edit key='delivery' label='add delivery' direct=true                    
        if in_dev
            +remove_button
            +print_this



template(name='user_friends')
    +user_friend_button
    .ui.stackable.grid
        .two.column.row
            .column
                .ui.small.header connected to
                .ui.middle.aligned.selection.animated.large.list
                    each friends
                        +user_segment
            .column
                .ui.small.header connected by
                .ui.middle.aligned.selection.animated.large.list
                    each friends_with
                        +user_segment
    .ui.header
        i.user.friends.icon
        |user friends
    .ui.input
        input.add_friend_by_username(type='text' placeholder='add user by friend')
    .ui.header friend ids
    each currentUser.friend_ids 
        .ui.label #{this}
    .ui.header friend usernames
    each currentUser.friend_usernames 
        .ui.big.basic.label 
            i.remove.link.icon.remove_friend
            |#{this}
    each user_friend_docs
        .ui.big.button(href="/user/#{username}") #{username}


template(name='user_segment')
    a.item(href="/user/#{username}")
        img.ui.avatar.image(src="{{c.url image_id gravity='face' crop='fit'}}")
        .content
            .header
                |#{name}
                small $#{credit}
            .description
                each tags
                    .ui.basic.label #{this}

    //- .ui.horizontal.card
    //-     .image
    //-         if image_id
    //-             img(src="{{c.url image_id gravity='face' crop='crop'}}")
    //-     .content
    //-         a.ui.header(href="/user/#{username}")
    //-             |#{first_name} #{last_name}
    //-             //- |#{username}
    //-         //- .ui.header Tags
    //-         each tags
    //-             .ui.basic.label #{this}
    //-         +user_status user
    //-         .ui.header #{body}
    //-         +user_friend_button
template(name='user_friend_button')
    if is_friend
        .ui.blue.fade.animated.button.unfriend
            .visible.content
                |connected
            .hidden.content
                i.minus.icon
    else
        .ui.basic.button.friend
            i.plus.icon
            |connect
//- 
//- 
//- 
//- template(name='user_bookmarks_small')
//-     .ui.inline.header
//-         i.bookmark.small.icon
//-         | bookmarks
//-     div
//-     .ui.large.link.list
//-         each bookmarks
//-             a.item(href="/#{model}/#{_id}/view") #{title} [#{model}]
//- 
//- 
//- 
//- 
//- 
//- 
//- template(nam
//-     .ui.header
//-         i.list.icon
//-         |orders
//-     .scrolling
//-         each orders
//-             +order_segment
//- 
//- 
//- template(name='order_segment')
//-     .ui.segment
//-         .ui.header #{when} #{_author_username}
//-         .ui.list
//-             .item buyer: #{buyer_username}
//-             .item seller: #{seller_username}
//-             .item product_id: #{product_id}
//-         with product
//-             .ui.header product #{title}
//-         a.ui.button(href="/alpha/#{product_id}/view")
//-             |view product
//-         if can_edit
//-             .ui.small.basic.button.cancel
//-                 i.remove.icon
//-                 |cancel
//-         if is_admin
//-             +remove_button


template(name='user_credits')  
    .ui.inline.header 
        i.chevron.down.icon
        |points received
    .ui.basic.label #{total_credit_amount}p total received
    // |received
    .ui.basic.label(title='received count') #{credit_count} total gifts 
    .ui.basic.label(title='rank') ##{global_credit_count_rank} count rank
        
    i.tags.icon(title='credit tags')
    each credit_tags
        .ui.basic.circular.label #{title}
            small #{count}
        
    .ui.stackable.cards.scrolling
        each user_credits
            a.ui.card(href="/m/debit/#{_id}/view")
                .content
                    .header
                        strong #{amount}pt 
                        // |from 
                        if author.profile_image_id
                            img.ui.avatar.image(src="{{c.url author.profile_image_id height=200 width=200 gravity='face' crop='fill'}}")
                        |#{_author.shortname}
                    small #{when}
                    div
                    |#{description}
                    div
                    each tags
                        .ui.basic.label #{this}

template(name='user_credits_small')
    .ui.inline.header 
        i.minus.icon
        |#{total_credit_amount}p
        |received
        .ui.basic.label #{credit_count} credits
            | ##{global_credit_count_rank}
    div
    .ui.link.list.scrolling
        each user_credits
            .item
                if author.profile_image_id
                    img.ui.avatar.image(src="{{c.url author.profile_image_id height=200 width=200 gravity='face' crop='fill'}}")
                .content
                    .header
                        strong #{amount}pt 
                        |from 
                        a(href="/user/#{author.username}")
                            |#{author.username}
                    .description
                        a(href="/debit/#{_id}/view")
                            |#{when}
                .content
                    .description
                        |#{description}
                        each tags
                            .ui.basic.label #{this}
                if is_admin 
                    +remove_button
                .spacer
