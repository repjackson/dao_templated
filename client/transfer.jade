template(name='transfers')
    .ui.stackable.padded.grid
        .four.wide.column.scrolling
            .ui.header 
                +i name='transfer-between-users'
                |transfers
            // unless tag_results.count
            //     i.loading.yin.yang.big.grey.icon
            // else
            +i name='tags' cl='ui inline image'
            each picked_tags
                +unpick_tag
                // .ui.blue.button.unpick_tag.zoomer
                //     |#{this}
            each tag_results
                +tag_picker
                // a.ui.basic.link.large.label.pick_tag #{title}
                //     // small #{count}
            div
            +i name='marker' cl='ui inline image'
            each picked_location_tags
                a.ui.red.button.unpick_location_tag
                    |#{this}
            each location_tag_results
                a.ui.basic.link.large.label.zoomer.pick_location_tag #{title}
                    // small #{count}
            div
            +i name='send' cl='ui inline image'
            each picked_authors
                a.ui.teal.button.unpick_author_tag
                    |#{this}
            each author_results
                a.ui.basic.link.large.label.zoomer.pick_author_tag #{title}
                    // small #{count}
            div
            +i name='donate' cl='ui inline image'
            each picked_targets
                a.ui.teal.button.unpick_target_tag
                    |#{this}
            each target_results
                a.ui.basic.link.large.label.zoomer.pick_target_tag #{title}
                    // small #{count}
        .twelve.wide.column
            // +session_set key='transfer_sort_filter' value='open'               
            // +session_set key='transfer_filter' value='now' icon='clock'            
            // +session_set key='transfer_filter' value='day' icon='sun'
            // +session_set key='transfer_filter' value=null label='all'
            // i.sort.grey.icon
            // +session_set key='transfer_sort_key' value='price'               
            .ui.four.stackable.centered.cards.scrolling
                if transfer_docs.count
                    each transfer_docs
                        +transfer_item
                else 
                    .ui.basic.segment
                        i.massive.yin.yang.grey.loading.icon
            
            
template(name='tag_picker')
    // if title
    a.ui.large.link.image.basic.label.pick_tag.zoomer(title=count)
        with ref_doc
            if image_url
                +image_link_view key='image_url' direct=true
            else if image_id
                +image_view key='image_id' direct=true
        // else
        |#{title} 
        // 
            // img.ui.image(src="{{c.url image_id width=500 height=500 gravity='face' crop='fill'}}")
            // img(src=metadata.image)
        // small.ui.grey.text #{count}
            
            
            
template(name='unpick_tag')                        
    a.ui.black.huge.image.label.zoomer.unpick_tag
        with ref_doc_flat
            if image_url
                +image_link_view key='image_url'
            else if image_id
                +image_view key='image_id'
        
            // img.ui.image(src="{{c.url image_id width=500 height=500 gravity='face' crop='fill'}}")
        |#{this}
                        
            
template(name='flat_tag_picker')
    .ui.large.image.link.label.flat_tag_pick.zoomer.pointer
        with ref_doc_flat
            if image_url
                +image_link_view key='image_url' direct=true
            else if image_id
                +image_view key='image_id' direct=true
        // img.ui.image(src="{{c.url ref_doc_flat.image_id width=200 height=200 gravity='face' crop='fill'}}")
        |#{this}

            
template(name='transfer_item')
    a.ui.link.card.fly_right(href="/transfer/#{_id}")
        if image_id
            img.ui.image(src="{{c.url image_id height=200 width=200 gravity='face' crop='fill'}}")
            // a.header(href="/transfer/#{_id}") #{title}
        .content
            .ui.inline.header
                if _author.image_id
                    img.ui.avatar.image(src="{{c.url _author.image_id height=400 width=400 gravity='face' crop='fill'}}")
                | #{_author_username}
                .ui.big.basic.circular.label #{amount}
                // .ui.big.basic.image.label
                if target.image_id
                    img.ui.avatar.image(src="{{c.url target.image_id height=400 width=400 gravity='face' crop='fill'}}")
                |#{target_username}
            // .content
            |!{description}
            // i.tag.large.grey.icon
            each tags
                .ui.basic.large.label #{this}
            if location_tags
                i.large.marker.icon
                each location_tags
                    .ui.basic.large.label #{this}
            small #{when}
                // if in_dev 
                //     +print_this
        .ui.attached.basic.buttons
            .ui.icon.button
                |#{comment_count}
                i.chat.outline.icon
            .ui.icon.button
                |#{views}
                i.eye.icon
            .ui.icon.button
                |#{upvotes}
                i.thumbs.up.outline.icon
            .ui.icon.button
                |#{downvotes}
                i.thumbs.down.outline.icon
                    
                    
                    
template(name='transfer_view')
    with current_doc
        .ui.stackable.padded.grid
            .centered.row 
                .three.wide.center.aligned.column
                    a.fly_right(href="/user/#{_author.username}") 
                        img.ui.centered.pointer.zoomer.image(src="{{c.url _author.image_id height=500 width=500 gravity='face' crop='fill'}}" class=currentUser.invert_class)
                        .ui.large.center.aligned.header.pointer.zoomer
                            |#{_author.name}
                .ten.wide.center.aligned.column
                    .ui.huge.center.aligned.inline.header
                        |#{amount}p
                    // .f14
                    //     |#{description}
                    // .spacer
                    if tags
                        +i name='tags' cl='ui inline image'
                        each tags 
                            a.ui.big.basic.link.label.flat_tag #{this}
                    if location_tags
                        +i name='marker' cl='ui inline image'
                        each location_tags 
                            .ui.big.basic.label #{this}
                    // .spacer
                    .ui.small.inline.header
                        i.clock.icon
                        | #{when}, 
                        |#{_timestamp_long}
                    img.ui.centered.rounded.image(src="{{c.url image_id }}" class=currentUser.invert_class)
                    div 
                    |!{description}
                    div 
                    .spacer
                    .spacer
                    +voting_full
                    +viewing
                    +comments
                    if in_dev
                        +print_this
                        +remove_button
                    if is_author
                        a(href="/transfer/#{_id}/edit")
                            i.large.pencil.icon
                    //- +array_view key='location_tags' label='location_tags' direct=true
                .three.wide.center.aligned.column
                    a.fly_right(href="/user/#{target.username}")
                        img.ui.centered.fluid.pointer.zoomer.rounded.image(src="{{c.url target.image_id height=500 width=500 gravity='face' crop='fill'}}" class=currentUser.invert_class)
                        .ui.large.center.aligned.header.pointer.zoomer
                            |#{target.name}



template(name='transfer_edit')
    with current_doc
        .ui.stackable.padded.grid
            .row 
                .four.wide.column
                    .ui.large.fluid.basic.button.cancel_transfer
                        i.large.remove.red.icon
                        |cancel
                    .ui.segment
                        .ui.inline.grey.header sender
                        .ui.inline.header
                            img.ui.small.image(src="{{c.url _author.image_id height=200 width=200 gravity='face' crop='fill'}}" class=currentUser.invert_class)
                            |#{_author.name}
                    .ui.segment
                        .ui.inline.header target
                        with target
                            i.large.remove.link.icon.remove_target
                            a.pointer(href="/user/#{name}")
                                img.ui.tiny.inline.image(src="{{c.url image_id height=400 width=400 gravity='face' crop='fill'}}" class=currentUser.invert_class)
                                .ui.inline.header #{name}
                                .ui.small.grey.inline.header #{points}
                        unless target
                            .ui.divider
                            // i.large.user.plus.icon
                            +single_user_edit key='target_id' label='search member' icon='user plus' direct=true
                            // .ui.icon.input
                            //     i.search.icon
                            //     input.search_username(type='text' placeholder='username')
                            // each members
                            //     .ui.compact.basic.button.add_target
                            //         // i.plus.icon
                            //         img.ui.avatar.image(src="{{c.url image_id height=200 width=200 gravity='face' crop='fill'}}" class=currentUser.invert_class)
                            //         |#{name}
                            //         small #{points}p
                    // +date_edit key='date' label='date' direct=true   
                    // +time_edit key='time' label='time' direct=true   
                .eight.wide.column
                    +array_edit key='tags' label='tags' icon='tag' direct=true
                    .ui.hidden.divider
                    +boolean_edit key='has_location_tags' label='location' icon='marker' direct=true
                    if has_location_tags
                        +array_edit key='location_tags' label='location tags' icon='marker' direct=true
                    +boolean_edit key='has_description' label='description' icon='content' direct=true
                    if has_description
                        +html_edit key='description' label='description' direct=true
                    
                    +boolean_edit key='has_image' label='image' icon='image' direct=true
                    if has_image
                        +image_edit key='image_id' label='image' direct=true
                    // +key_value_edit key='privacy' value='public' icon='eye' label='public'
                    // +key_value_edit key='privacy' value='private' icon='lock' label='private'
                    // +key_value_edit key='privacy' value='anon' icon='anonymous-mask' label='anonymous'
                    div
                    if in_dev
                        +print_this
                    
                    // div
                    // .ui.inline.header
                    //     i.tag.red.icon
                    //     |tags
                    // .ui.input
                    //     input.new_tag(type='text' placeholder='+' autocomplete="off")
                    //     //- +clear_value                
                    // each terms 
                    //     a.ui.large.basic.button.select_term(href='#')
                    //         if image
                    //             img.ui.mini.rounded.inline.image(src="{{c.url image height=200 width=200 gravity='face' crop='fill'}}" class=currentUser.invert_class)
                    //         |#{title}
                    // each tags
                    //     .ui.big.basic.label
                    //         i.delete.icon.remove_element
                    //         |#{this}
                    // if suggestions
                    //     .ui.small.inline.header suggestions
                    // each suggestions
                    //     a.ui.large.basic.button.select_term(href='#')
                    //         // if image
                    //         //     img.ui.mini.rounded.inline.image(src="{{c.url image height=200 width=200 gravity='face' crop='fill'}}" class=currentUser.invert_class)
                    //         |#{title}
                .four.wide.center.aligned.column
                    // .ui.big.header #{amount}pts
                    .ui.big.input
                        input.point_amount(type='number' value=amount min='1' max=point_max)
                    // div
                    // .spacer
                    +key_value_edit key='amount' value=1
                    +key_value_edit key='amount' value=5
                    +key_value_edit key='amount' value=10
                    +key_value_edit key='amount' value=20
                    +key_value_edit key='amount' value=50
                    .ui.hidden.divider
                    .ui.center.aligned.basic.segment
                        if can_submit
                            .ui.green.huge.rounded.button.submit
                                i.big.send.icon
                                small send 
                                strong #{amount}p
                                small to 
                                strong #{target_username}
                        else 
                            .ui.green.huge.disabled.rounded.button
                                i.send.big.icon
                                |send #{amount}pts to #{target_username}
                    // +text_edit key='quick_add' label="quick send [amount] to [username] for [list of tags]" icon='lightning'
                    // .ui.button.parse_quick_add
                    //     i.lightning.icon



