template(name='home')
    if logging_in
        .ui.center.aligned.basic.segment
            i.huge.loading.yin.yang.grey.icon
    else
        .ui.stackable.three.column.padded.grid
            .column
                .ui.header 
                    +i name='yin-yang'
                    |dao
            .column
                +specials
            .column
            .column
                +daily_question
            .column
                .ui.header 
                    +i name='money'
                    |money earned yesterday
                .ui.header 
                    +i name='week-view'
                    |money earned last week
                .ui.header 
                    +i name='pay-date'
                    |payroll yesterday
            .column
                .ui.inline.header 
                    +i name='blog'
                    |posts
                // unless current_post
                // unless subs_ready
                //     .ui.center.aligned.basic.segment
                //         i.massive.grey.food.loading.icon
                each picked_tags
                    +unpick_tag
                if subs_ready
                    if tag_results
                        each tag_results
                            +tag_picker
                .ui.hidden.divider
                unless subs_ready
                    .ui.center.aligned.basic.segment
                        +ibig name='pizza' cl='spinning'
    
                else 
                    if current_post
                        with current_post
                            +home_item
                    else if one_doc
                        .ui.cards.scrolling
                            each home_items
                                +home_item
                    else if two_docs
                        .ui.stackable.two.cards.scrolling
                            each home_items
                                +home_item
                    else 
                        .ui.stackable.centered.cards.scrolling
                            each home_items
                                +home_item
            // .column
            //     +items
            // .column
            //     +checkin_small
            // .column
            //     +loss_summary
                // +losses
            // .column
            //     +food
            // .column
            //     +drinks
            // .column
            //     +order_small
        
                
            
                

template(name='daily_question')
    .ui.inline.header 
        i.question.icon
        |daily question
    if is_admin
        i.circular.link.plus.icon.add_question
    with daily_question
        .ui.header #{title}
        
        
template(name='specials')
    a.ui.header(href="/specials")
        +i name='discount'
        |specials
        if is_admin
            i.plus.link.icon.add_specihal
    each specials
        .ui.header #{title}
        
        
template(name='home_item')
    // if session_is 'editing_chat' _id
    //     .ui.item
    //         .content
    //             +text_edit key='title' direct=true
    //             i.checkmark.large.link.green.icon.save_chat   
    //             +boolean_edit key='archived' label='archived' icon='archive' direct=true
    // else
    // .ui.fluid.card(class=card_class)
    .ui.fluid.card
        // span.clear_current_post
        a.zoomer.fly_right(href="/post/#{_id}")
            if image_url
                +image_link_view key='image_url' direct=true
            else if image_id
                +image_view key='image_id' direct=true 
            else if youtube_id
                +youtube_view key='image_id' direct=true
            // if is_selected
            //     .ui.header this one
            // if unless
            // else
            //     img.ui.image(src="{{c.url image_id width=500 height=500 gravity='face' crop='fill'}}")
        .content
            a.ui.header.zoomer.fly_right(href="/post/#{_id}") !{title}
            // a.ui.inline.header.zoomer.clear_current_post !{title}
            
            // .metadata
            //     |#{when}
            //     small {{long_date _timestamp}}
            .text.zoomer.clear_current_post
                |!{body}
            each tags
                +flat_tag_picker
            .ui.large.label #{model}
            +text_edit key='model' label='model' direct=true

        
        
        
template(name='flat_tag_avatar')
    // .ui.image.flat_tag_pick.zoomer.pointer
    with ref_doc_flat
        // if image_url
        //     img(src=image_url)
        //     // +image_link_view key='image_url' direct=true
        // else if image_id
        //     // +image_view key='image_id' direct=true
        if image_id
            img.ui.mini.rounded.inline.image.zoomer(src="{{c.url image_id width=400 height=400 gravity='face' crop='fill'}}" title=title)
        // |#{this}
        
        
        
template(name='duck')
    with content
        // .ui.segment
        .ui.inline.header #{Heading}
        // .item abstract #{Abstract}
        .item.abstract !{AbstractText}
        // a.ui.circular.icon.button(href=AbstractURL)
        //     // #{AbstractURL}
        //     i.large.external.icon
        img(src=Image)
        each RelatedTopics
            if Text
                // .ui.compact.button.topic
                .ui.small.tertiary.basic.button.topic
                    img.ui.tiny.inline.rounded.image(src=Icon.URL)
                    |#{Text}
                    // | {{lowered Text}}
            // .content
            //     .item #{FirstURL}
                // .item !{Result}
                
                
                
template(name='alpha')
    with response.queryresult
        // .ui.inline.header #{datatypes}
        // each split_datatypes
        //     .ui.button.basic.compact.circular.buton.select_datatype
        //         |#{this}
        // .ui.list
            // .item success: #{success}
            // .item error: #{error}
            // .item numpods: #{numpods}
            // .item datatypes: #{datatypes}
                // each datatypes
                //     .ui.button
                //         |#{this}
            // .item timedout: #{timedout}
            // .item timedoutpods: #{timedoutpods}
            // .item timing: #{timing}
            // .item parsetiming: #{parsetiming}
            // .item parsetimedout: #{parsetimedout}
            // .item recalculate: #{recalculate}
            // .item id: #{id}
            // .item host: #{host}
            // .item server: #{server}
            // .item related: #{related}
            // .item version: #{version}
        each pods
            div
            // .ui.small.inline.middle.aligned.header.middled #{title}
            .ui.small.inline.header #{title}
            div
            // .item #{scanner}
            // .item id #{id}
            // .item position #{position}
            // .item error #{error}
            // .item numsubpods #{numsubpods}
            // .item subpods
            // .ui.list
            each subpods
                // .ui.small.inline.header #{title}
                img.ui.zoomer.pointer.image.alphatemp(src=img.src)
                // .item.alphatemp
                // |#{plaintext}
                // .item title: #{title}
                // .item primary: #{primary}
    // each tags
    //     .ui.label #{this}
    // .alphatemp voice: #{voice}
    //   div assumptions": {
    //     "type": "Clash",
    //     "word": "time",
    //     "template": "Assuming \"${word}\" is ${desc1}. Use as ${desc2} instead",
    //     "count": 4,
    //     "values": [
    //       {
    //         "name": "CalendarWord",
    //         "desc": " referring to a calendar computation",
    //         "input": "*C.time-_*CalendarWord-"
    
    
        